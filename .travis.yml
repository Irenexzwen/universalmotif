# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r
# Default configuration for use with tic package
# tic documentation to get started: https://ropenscilabs.github.io/tic/
# Usually you shouldn't need to change the first part of the file

# DO NOT CHANGE THE CODE BELOW
before_install:
  - mkdir $HOME/.R && echo -e 'CXX=ccache g++-7\nCC=ccache gcc-7\nFC=ccache gfortran' > $HOME/.R/Makevars
  - echo 'add_package_checks()' > /home/travis/build/bjmt/universalmotif/tic.R
  - R -q -e 'if (!requireNamespace("remotes")) install.packages("remotes")'
  - R -q -e 'if (getRversion() < "3.2" && !requireNamespace("curl")) install.packages("curl")'
  - R -q -e 'remotes::install_github("ropenscilabs/tic", upgrade = "always"); print(tic::dsl_load()); tic::prepare_all_stages()'
  - R -q -e 'tic::before_install()'
install: R -q -e 'tic::install()'
after_install: R -q -e 'tic::after_install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'
# DO NOT CHANGE THE CODE ABOVE

# Custom parts:

# Header
language: r
sudo: false
dist: xenial
cache:
  - packages
  - ccache
latex: false

r: bioc-release

r-binary-install:
  - r-cran-ade4

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - ccache
      - libgsl0-dev
      - ghostscript
      - texlive-fonts-recommended
      - gcc-7
      - g++-7
      - gfortran
      - r-base-dev

#env
env:
  global:
  - MAKEFLAGS="-j 2"

#services
services:
