% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods.R
\docType{methods}
\name{create_motif}
\alias{create_motif}
\alias{create_motif,missing-method}
\alias{create_motif,numeric-method}
\alias{create_motif,character-method}
\alias{create_motif,matrix-method}
\alias{create_motif,XStringSet-method}
\title{Create a motif.}
\usage{
create_motif(input, alphabet, type = "PCM", name = "motif",
  pseudocount = 0.8, bkg, nsites, altname, family, organism, bkgsites, strand,
  pval, qval, eval, extrainfo)

\S4method{create_motif}{missing}(input, alphabet, type = "PCM",
  name = "motif", pseudocount = 0.8, bkg, nsites, altname, family, organism,
  bkgsites, strand, pval, qval, eval, extrainfo)

\S4method{create_motif}{numeric}(input, alphabet, type = "PCM",
  name = "motif", pseudocount = 0.8, bkg, nsites, altname, family, organism,
  bkgsites, strand, pval, qval, eval, extrainfo)

\S4method{create_motif}{character}(input, alphabet, type = "PCM",
  name = "motif", pseudocount = 0.8, bkg, nsites, altname, family, organism,
  bkgsites, strand, pval, qval, eval, extrainfo)

\S4method{create_motif}{matrix}(input, alphabet, type = "PCM",
  name = "motif", pseudocount = 0.8, bkg, nsites, altname, family, organism,
  bkgsites, strand, pval, qval, eval, extrainfo)

\S4method{create_motif}{XStringSet}(input, alphabet, type = "PCM",
  name = "motif", pseudocount = 0.8, bkg, nsites, altname, family, organism,
  bkgsites, strand, pval, qval, eval, extrainfo)
}
\arguments{
\item{input}{One of character vector, numeric,matrix (PCM, PPM, PWM, or ICM),
or \linkS4class{XStringSet}.}

\item{alphabet}{Character. 'DNA', 'RNA', 'AA', 'custom', or a combined 
string representing the letters.}

\item{type}{Character. 'PCM', 'PPM', 'PWM', or 'ICM'.}

\item{name}{Character. Motif name.}

\item{pseudocount}{Numeric. Correction to be applied to prevent \code{-Inf}
from apearing in PWM matrices.}

\item{bkg}{Numeric. Must sum to 1 and be equal in length to the alphabet
length.}

\item{nsites}{Numeric. Number of sites the motif was constructed from.}

\item{altname}{Character. Alternate motif name.}

\item{family}{Character. Transcription factor family.}

\item{organism}{Character. Species of origin.}

\item{bkgsites}{Numeric. Total number of sites used to find the motif.}

\item{strand}{Character. Whether the motif is specific to a certain strand.}

\item{pval}{Numeric. P-value associated with motif.}

\item{qval}{Numeric. Adjusted P-value associated with motif.}

\item{eval}{Numeric. E-value associated with motif.}

\item{extrainfo}{Character. Any other extra information, represented as
a named character vector.}
}
\value{
\linkS4class{universalmotif} object.
}
\description{
Create a motif.
}
\details{
See \code{\link[TFBSTools]{rPWMDmm}} for more advanced generation of
   random motifs.
}
\section{Methods (by class)}{
\itemize{
\item \code{missing}: Create a random motif of length 10.

\item \code{numeric}: Create a random motif with a specified length.

\item \code{character}: Create motif from a consensus string.

\item \code{matrix}: Create motif from a matrix.

\item \code{XStringSet}: Create motif from an \linkS4class{XStringSet} object.
}}

\examples{
##### create motifs from a single string

# motif is initially generated as a PCM; change final type as desired
DNA.motif <- create_motif("TATAWAW", type = "PPM", pseudocount = 0)

# nsites will be set to the number of input sequences unless specified 
DNA.motif <- create_motif("TTTTTTT", nsites = 10)

# if ambiguity letters are found and nsites is not specified, nsites will
# be set to the minimum required to respect amibiguity letters
DNA.motif <- create_motif("TATAWAW")
DNA.motif <- create_motif("NNVVWWAAWWDDN")

# be careful about setting nsites when using ambiguity letters!
DNA.motif <- create_motif("NNVVWWAAWWDDN", nsites = 1)

RNA.motif <- create_motif("UUUCCG")

# 'create_motif' will try to detect the alphabet type; this can be 
# unreliable for AA and custom alphabets as DNA and RNA alphabets are
# detected first
AA.motif <- create_motif("AVLK", alphabet = "AA")

custom.motif <- create_motif("QWER", alphabet = "custom")
# specify custom alphabet
custom.motif <- create_motif("QWER", alphabet = "QWERASDF")

###### create motifs from multiple strings of equal length

DNA.motif <- create_motif(c("TTTT", "AAAA", "AACC", "TTGG"), type = "PPM")
DNA.motif <- create_motif(c("TTTT", "AAAA", "AACC", "TTGG"), nsites = 20)
RNA.motif <- create_motif(c("UUUU", "AAAA", "AACC", "UUGG"), type = "PWM")
AA.motif <- create_motif(c("ARNDCQ", "EGHILK", "ARNDCQ"), alphabet = "AA")
custom.motif <- create_motif(c("POIU", "LKJH", "POIU", "CVBN"),
                             alphabet = "custom")

# ambiguity letters are only allowed for single consensus strings; the
# following fails
\dontrun{
create_motif(c("WWTT", "CCGG"))
create_motif(c("XXXX", "XXXX"), alphabet = "AA")
}

##### create motifs from XStringSet objects

library(Biostrings)

DNA.set <- DNAStringSet(c("TTTT", "AAAA", "AACC", "TTGG"))
DNA.motif <- create_motif(DNA.set)
RNA.set <- RNAStringSet(c("UUUU", "AACC", "UUCC"))
RNA.motif <- create_motif(RNA.set)
AA.set <- AAStringSet(c("VVVLLL", "AAAIII"))
AA.motif <- create_motif(AA.set)

# custom motifs can be created from BStringSet objects
B.set <- BStringSet(c("QWER", "ASDF", "ZXCV", "TYUI"))
custom.motif <- create_motif(B.set)

##### create motifs from matrices

mat <- matrix(c(1, 1, 1, 1,
                2, 0, 2, 0,
                0, 2, 0, 2,
                0, 0, 0, 0),
                nrow = 4, byrow = TRUE)
DNA.motif <- create_motif(mat, alphabet = "DNA")
RNA.motif <- create_motif(mat, alphabet = "RNA", nsites = 20)
custom.motif <- create_motif(mat)

# specify custom alphabet
custom.motif <- create_motif(mat, alphabet = "QWER")

# alphabet can be detected from rownames
rownames(mat) <- DNA_BASES
DNA.motif <- create_motif(mat)
rownames(mat) <- c("Q", "W", "E", "R")
custom.motif <- create_motif(mat)

# PPM type matrices can also be used as input
mat.ppm <- matrix(c(0.1, 0.1, 0.1, 0.1,
                    0.5, 0.5, 0.5, 0.5,
                    0.1, 0.1, 0.1, 0.1,
                    0.3, 0.3, 0.3, 0.3),
                    nrow = 4, byrow = TRUE)

DNA.motif <- create_motif(mat.ppm, alphabet = "DNA", type = "PPM")

##### create random motifs

# these are generated as PPMs with 10 positions

DNA.motif <- create_motif()
RNA.motif <- create_motif(alphabet = "RNA")
AA.motif <- create_motif(alphabet = "AA")
custom.motif <- create_motif(alphabet = "QWER")

# the number of positions can be specified

DNA.motif <- create_motif(5)

# if the background frequencies are not provided, they are assumed to be
# uniform; if different background frequencies are used, then at each
# position \\code{rdirichlet(1, bkg)} is used 

DNA.motif <- create_motif(bkg = c(0.3, 0.2, 0.2, 0.3))
DNA.motif <- create_motif(10, bkg = c(0.1, 0.4, 0.4, 0.1))

}
\author{
Benjamin Tremblay, \email{b2tremblay@uwaterloo.ca}
}
