% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scan_sequences.R
\name{scan_sequences}
\alias{scan_sequences}
\title{Find motif binding sites in a set of sequences.}
\usage{
scan_sequences(motifs, sequences, threshold = 0.6,
  threshold.type = "logodds", RC = FALSE, use.freq = 1,
  do.not.ask = FALSE, BPPARAM = SerialParam())
}
\arguments{
\item{motifs}{List of motifs or a single motif.}

\item{sequences}{XStringSet object. List of sequences to scan}

\item{threshold}{Numeric. Logodds threshold.}

\item{threshold.type}{Character. One of 'logodds' and 'pvalue'.}

\item{RC}{Logical. Check reverse strand.}

\item{use.freq}{Numeric.}

\item{do.not.ask}{Logical.}

\item{BPPARAM}{See \code{\link[BiocParallel]{SerialParam}}.}
}
\value{
Site search results as a data.frame object.
}
\description{
DNA/RNA only.
}
\details{
Benchmarking: scanning a 1 billion bp sequence with HMMorder = 1 and 
   RC = FALSE took about 4.5 minutes. Scanning 1000 sequences 1 million bp
   each took about 6 minutes. As for HMMorder = 0; for shorter sequences
   it is amazingly fast.. but when I tried with a 1 billion bp long
   sequence it took about 5 min. Not sure why it slows down so much.

   Careful with large k. A motif with freqs 10 is 80 MB.

   Note: there are no memory-saving strategies implemented. Therefore
   memory and cpu requirements increase exponentially with k.
}
\examples{
   \dontrun{
   set.seed(1)
   alphabet <- paste(c(letters), collapse = "")
   motif <- create_motif("hello", alphabet = alphabet)
   sequences <- create_sequences(alphabet, seqnum = 1000, seqlen = 100000)
   scan_sequences(motif, sequences)
   }

}
\author{
Benjamin Tremblay, \email{b2tremblay@uwaterloo.ca}
}
