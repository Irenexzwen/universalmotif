% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_DBscores.R
\name{make_DBscores}
\alias{make_DBscores}
\title{Create P-value databases.}
\usage{
make_DBscores(db.motifs, method = c("PCC", "MPCC", "EUCL", "MEUCL", "SW",
  "MSW", "KL", "MKL", "ALLR", "MALLR", "BHAT", "MBHAT", "HELL", "MHELL",
  "IS", "MIS", "SEUCL", "MSEUCL", "MAN", "MMAN", "ALLR_LL", "MALLR_LL"),
  shuffle.db = TRUE, shuffle.k = 3, shuffle.method = "linear",
  rand.tries = 1000, widths = 5:30, min.position.ic = 0,
  normalise.scores = FALSE, min.overlap = 6, min.mean.ic = 0,
  progress = TRUE, BP = FALSE, nthreads = 1, tryRC = TRUE)
}
\arguments{
\item{db.motifs}{\code{list} Database motifs.}

\item{method}{\code{character(1)} One of \code{c('PCC', 'MPCC', 'EUCL', 'MEUCL', 'SW', 'MSW', 'KL', 'MKL', 'ALLR', 'MALLR')}. See details.}

\item{shuffle.db}{\code{logical(1)} Deprecated. Does nothing.
generate random motifs with \code{\link[=create_motif]{create_motif()}}.}

\item{shuffle.k}{\code{numeric(1)} See \code{\link[=shuffle_motifs]{shuffle_motifs()}}.}

\item{shuffle.method}{\code{character(1)} See \code{\link[=shuffle_motifs]{shuffle_motifs()}}.}

\item{rand.tries}{\code{numeric(1)} Approximate number of comparisons
to perform for every combination of \code{widths}.}

\item{widths}{\code{numeric} Motif widths to use in P-value database calculation.}

\item{min.position.ic}{\code{numeric(1)} Minimum information content required between
individual alignment positions for it to be counted in the final alignment
score. It is recommended to use this together with \code{normalise.scores = TRUE},
as this will help punish scores resulting from only a fraction of an
alignment.}

\item{normalise.scores}{\code{logical(1)} Favour alignments which leave fewer
unaligned positions, as well as alignments between motifs of similar length.
Similarity scores are multiplied by the ratio of
aligned positions to the total number of positions in the larger motif,
and the inverse for distance scores.}

\item{min.overlap}{\code{numeric(1)} Minimum overlap required when aligning the
motifs. Setting this to a number higher then the width of the motifs
will not allow any overhangs. Can also be a number less than 1,
representing the minimum fraction that the motifs must overlap.}

\item{min.mean.ic}{\code{numeric(1)} Minimum mean information content between the
two motifs for an alignment to be scored. This helps prevent scoring
alignments between low information content regions of two motifs.}

\item{progress}{\code{logical(1)} Show progress.}

\item{BP}{\code{logical(1)} Deprecated. See \code{nthreads}.}

\item{nthreads}{\code{numeric(1)} Run \code{\link[=compare_motifs]{compare_motifs()}} in parallel with \code{nthreads}
threads. \code{nthreads = 0} uses all available threads.}

\item{tryRC}{\code{logical(1)} Try the reverse complement of the motifs as well,
report the best score.}
}
\value{
A \code{data.frame} with score distributions for the
input database, or a \code{list} with a \code{data.frame} for each method and
an additional \code{list} entry logging function parameters if more than one
method is provided.
}
\description{
Generate data used by \code{\link[=compare_motifs]{compare_motifs()}} for P-value calculations. By default,
\code{\link[=compare_motifs]{compare_motifs()}} uses an internal database based on the JASPAR2018 core motifs
\insertCite{jaspar}{universalmotif}. Parameters for a logistic distribution are
are estimated for every combination of motif \code{widths}.
}
\details{
See \code{\link[=compare_motifs]{compare_motifs()}} for more info on comparison parameters.
}
\examples{
\dontrun{
library(MotifDb)
motifs <- convert_motifs(MotifDb[1:100])
scores <- make_DBscores(motifs, method = "PCC")
compare_motifs(motifs, 1:100, db.scores = scores)
}

}
\references{
\insertRef{jaspar}{universalmotif}
}
\seealso{
\code{\link[=compare_motifs]{compare_motifs()}}
}
\author{
Benjamin Jean-Marie Tremblay, \email{b2tremblay@uwaterloo.ca}
}
